version: '3.8'

services:
  api:
    depends_on:
      - db
    build:
      context: .
      dockerfile: Dockerfile
      target: development #  multi stage dockerfile, build per dev e prod nello stesso dockerfile
    env_file:
      - .env.local
    volumes:
      - .:/workspace

    # Run a command against the development stage of the image
    command: /bin/sh -c "npm run start:dev & npx drizzle-kit studio --port 3003"

    ports:
      - 3000:3000
      # - 3003:3003
      - 4983:4983

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5432:5432'

  # pgadmin:
  #   image: dpage/pgadmin4
  #   restart: unless-stopped
  #   depends_on:
  #     - db
  #   ports:
  #     - '8888:80'
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
  #     PGADMIN_DEFAULT_PASSWORD: password
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin

  logto:
    depends_on:
      logto_database:
        condition: service_healthy
    image: svhd/logto:${TAG-latest}
    entrypoint: ['sh', '-c', 'npm run cli db seed -- --swe && npm start']
    ports:
      - 3001:3001
      - 3002:3002
    environment:
      - TRUST_PROXY_HEADER=1
      - DB_URL=postgres://postgres:p0stgr3s@logto_database:5432/logto
      # Mandatory for GitPod to map host env to the container, thus GitPod can dynamically configure the public URL of Logto;
      # Or, you can leverage it for local testing.
      - ENDPOINT
      - ADMIN_ENDPOINT
  logto_database:
    image: postgres:14-alpine
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: p0stgr3s
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - logto-data:/var/lib/postgresql/data

volumes:
  postgres-data:
  pgadmin-data:
  logto-data:
